// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SpreadsheetUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// basicCellEntry - Use 'basicCellEntryParams' to pass parameters into this method.
        /// </summary>
        public void basicCellEntry()
        {
            #region Variable Declarations
            WinWindow uIFormulaBoxWindow = this.UIFauxcelSpreadsheetWindow.UIFormLayoutWindow.UIFormulaBoxWindow;
            WinEdit uIFormulaBoxEdit = this.UIFauxcelSpreadsheetWindow.UIFormulaBoxWindow.UIFormulaBoxEdit;
            #endregion

            // Launch '%VisualStudioDir%\Projects\PS6\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.vshost.exe'
            ApplicationUnderTest uIFauxcelSpreadsheetWindow = ApplicationUnderTest.Launch(this.basicCellEntryParams.UIFauxcelSpreadsheetWindowExePath, this.basicCellEntryParams.UIFauxcelSpreadsheetWindowAlternateExePath);

            // Double-Click 'formulaBox' window
            Mouse.DoubleClick(uIFormulaBoxWindow, new Point(97, -1));

            // Type '25' in 'formulaBox' text box
            uIFormulaBoxEdit.Text = this.basicCellEntryParams.UIFormulaBoxEditText;

            // Type '{Enter}' in 'formulaBox' text box
            Keyboard.SendKeys(uIFormulaBoxEdit, this.basicCellEntryParams.UIFormulaBoxEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// DataEntryTest - Use 'DataEntryTestParams' to pass parameters into this method.
        /// </summary>
        public void DataEntryTest()
        {
            #region Variable Declarations
            WinWindow uIFormulaBoxWindow = this.UIFauxcelSpreadsheetWindow.UIFormLayoutWindow.UIFormulaBoxWindow;
            WinEdit uIFormulaBoxEdit = this.UIFauxcelSpreadsheetWindow.UIFormulaBoxWindow.UIFormulaBoxEdit;
            #endregion

            // Launch '%VisualStudioDir%\Projects\PS6\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.vshost.exe'
            ApplicationUnderTest uIFauxcelSpreadsheetWindow = ApplicationUnderTest.Launch(this.DataEntryTestParams.UIFauxcelSpreadsheetWindowExePath, this.DataEntryTestParams.UIFauxcelSpreadsheetWindowAlternateExePath);

            // Double-Click 'formulaBox' window
            Mouse.DoubleClick(uIFormulaBoxWindow, new Point(97, -1));

            // Type '25' in 'formulaBox' text box
            uIFormulaBoxEdit.Text = this.DataEntryTestParams.UIFormulaBoxEditText;

            // Type '{Enter}' in 'formulaBox' text box
            Keyboard.SendKeys(uIFormulaBoxEdit, this.DataEntryTestParams.UIFormulaBoxEditSendKeys, ModifierKeys.None);

            // Type '25' in 'formulaBox' text box
            uIFormulaBoxEdit.Text = this.DataEntryTestParams.UIFormulaBoxEditText1;

            // Type '{Enter}' in 'formulaBox' text box
            Keyboard.SendKeys(uIFormulaBoxEdit, this.DataEntryTestParams.UIFormulaBoxEditSendKeys1, ModifierKeys.None);
        }
        
        #region Properties
        public virtual basicCellEntryParams basicCellEntryParams
        {
            get
            {
                if ((this.mbasicCellEntryParams == null))
                {
                    this.mbasicCellEntryParams = new basicCellEntryParams();
                }
                return this.mbasicCellEntryParams;
            }
        }
        
        public virtual DataEntryTestParams DataEntryTestParams
        {
            get
            {
                if ((this.mDataEntryTestParams == null))
                {
                    this.mDataEntryTestParams = new DataEntryTestParams();
                }
                return this.mDataEntryTestParams;
            }
        }
        
        public UIFauxcelSpreadsheetWindow UIFauxcelSpreadsheetWindow
        {
            get
            {
                if ((this.mUIFauxcelSpreadsheetWindow == null))
                {
                    this.mUIFauxcelSpreadsheetWindow = new UIFauxcelSpreadsheetWindow();
                }
                return this.mUIFauxcelSpreadsheetWindow;
            }
        }
        #endregion
        
        #region Fields
        private basicCellEntryParams mbasicCellEntryParams;
        
        private DataEntryTestParams mDataEntryTestParams;
        
        private UIFauxcelSpreadsheetWindow mUIFauxcelSpreadsheetWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'basicCellEntry'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class basicCellEntryParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%VisualStudioDir%\Projects\PS6\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.vshost.exe'
        /// </summary>
        public string UIFauxcelSpreadsheetWindowExePath = "C:\\Users\\Dave\\Documents\\Visual Studio 2010\\Projects\\PS6\\SpreadsheetGUI\\bin\\Debug\\" +
            "SpreadsheetGUI.vshost.exe";
        
        /// <summary>
        /// Launch '%VisualStudioDir%\Projects\PS6\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.vshost.exe'
        /// </summary>
        public string UIFauxcelSpreadsheetWindowAlternateExePath = "%VisualStudioDir%\\Projects\\PS6\\SpreadsheetGUI\\bin\\Debug\\SpreadsheetGUI.vshost.exe" +
            "";
        
        /// <summary>
        /// Type '25' in 'formulaBox' text box
        /// </summary>
        public string UIFormulaBoxEditText = "25";
        
        /// <summary>
        /// Type '{Enter}' in 'formulaBox' text box
        /// </summary>
        public string UIFormulaBoxEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DataEntryTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class DataEntryTestParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%VisualStudioDir%\Projects\PS6\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.vshost.exe'
        /// </summary>
        public string UIFauxcelSpreadsheetWindowExePath = "C:\\Users\\Dave\\Documents\\Visual Studio 2010\\Projects\\PS6\\SpreadsheetGUI\\bin\\Debug\\" +
            "SpreadsheetGUI.vshost.exe";
        
        /// <summary>
        /// Launch '%VisualStudioDir%\Projects\PS6\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.vshost.exe'
        /// </summary>
        public string UIFauxcelSpreadsheetWindowAlternateExePath = "%VisualStudioDir%\\Projects\\PS6\\SpreadsheetGUI\\bin\\Debug\\SpreadsheetGUI.vshost.exe" +
            "";
        
        /// <summary>
        /// Type '25' in 'formulaBox' text box
        /// </summary>
        public string UIFormulaBoxEditText = "25";
        
        /// <summary>
        /// Type '{Enter}' in 'formulaBox' text box
        /// </summary>
        public string UIFormulaBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type '25' in 'formulaBox' text box
        /// </summary>
        public string UIFormulaBoxEditText1 = "25";
        
        /// <summary>
        /// Type '{Enter}' in 'formulaBox' text box
        /// </summary>
        public string UIFormulaBoxEditSendKeys1 = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFauxcelSpreadsheetWindow : WinWindow
    {
        
        public UIFauxcelSpreadsheetWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Fauxcel Spreadsheet";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fauxcel Spreadsheet");
            #endregion
        }
        
        #region Properties
        public UIFormLayoutWindow UIFormLayoutWindow
        {
            get
            {
                if ((this.mUIFormLayoutWindow == null))
                {
                    this.mUIFormLayoutWindow = new UIFormLayoutWindow(this);
                }
                return this.mUIFormLayoutWindow;
            }
        }
        
        public UIFormulaBoxWindow UIFormulaBoxWindow
        {
            get
            {
                if ((this.mUIFormulaBoxWindow == null))
                {
                    this.mUIFormulaBoxWindow = new UIFormulaBoxWindow(this);
                }
                return this.mUIFormulaBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFormLayoutWindow mUIFormLayoutWindow;
        
        private UIFormulaBoxWindow mUIFormulaBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFormLayoutWindow : WinWindow
    {
        
        public UIFormLayoutWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "formLayout";
            this.WindowTitles.Add("Fauxcel Spreadsheet");
            #endregion
        }
        
        #region Properties
        public WinWindow UIFormulaBoxWindow
        {
            get
            {
                if ((this.mUIFormulaBoxWindow == null))
                {
                    this.mUIFormulaBoxWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIFormulaBoxWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUIFormulaBoxWindow.WindowTitles.Add("Fauxcel Spreadsheet");
                    #endregion
                }
                return this.mUIFormulaBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIFormulaBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFormulaBoxWindow : WinWindow
    {
        
        public UIFormulaBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "formulaBox";
            this.WindowTitles.Add("Fauxcel Spreadsheet");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFormulaBoxEdit
        {
            get
            {
                if ((this.mUIFormulaBoxEdit == null))
                {
                    this.mUIFormulaBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFormulaBoxEdit.WindowTitles.Add("Fauxcel Spreadsheet");
                    #endregion
                }
                return this.mUIFormulaBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFormulaBoxEdit;
        #endregion
    }
}
